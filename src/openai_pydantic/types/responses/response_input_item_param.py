# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from pydantic import BaseModel, Field
from typing import List, Optional

from typing import Union,Optional
from typing_extensions import Literal

from .easy_input_message_param import EasyInputMessageParam
from .response_output_message_param import ResponseOutputMessageParam
from .response_reasoning_item_param import ResponseReasoningItemParam
from .response_computer_tool_call_param import ResponseComputerToolCallParam
from .response_function_tool_call_param import ResponseFunctionToolCallParam
from .response_function_web_search_param import ResponseFunctionWebSearchParam
from .response_file_search_tool_call_param import ResponseFileSearchToolCallParam
from .response_input_message_content_list_param import ResponseInputMessageContentListParam
from .response_computer_tool_call_output_screenshot_param import ResponseComputerToolCallOutputScreenshotParam

__all__ = [
    "ResponseInputItemParam",
    "Message",
    "ComputerCallOutput",
    "ComputerCallOutputAcknowledgedSafetyCheck",
    "FunctionCallOutput",
    "ItemReference",
]


class Message(BaseModel):
    content: "ResponseInputMessageContentListParam"
    
    """
    A list of one or many input items to the model, containing different content
    types.
    """

    role: "Literal['user', 'system', 'developer']"
    
    """The role of the message input. One of `user`, `system`, or `developer`."""

    status: "Optional[Literal['in_progress', 'completed', 'incomplete']]"= None
    
    """The status of item.

    One of `in_progress`, `completed`, or `incomplete`. Populated when items are
    returned via API.
    """

    type: "Optional[Literal['message']]"= None
    
    """The type of the message input. Always set to `message`."""


class ComputerCallOutputAcknowledgedSafetyCheck(BaseModel):
    id: "str"
    
    """The ID of the pending safety check."""

    code: "Optional[str]"= None
    
    """The type of the pending safety check."""

    message: "Optional[str]"= None
    
    """Details about the pending safety check."""


class ComputerCallOutput(BaseModel):
    call_id: "str"
    
    """The ID of the computer tool call that produced the output."""

    output: "ResponseComputerToolCallOutputScreenshotParam"
    
    """A computer screenshot image used with the computer use tool."""

    type: "Literal['computer_call_output']"
    
    """The type of the computer tool call output. Always `computer_call_output`."""

    id: "Optional[str]"= None
    
    """The ID of the computer tool call output."""

    acknowledged_safety_checks: "Optional[List[ComputerCallOutputAcknowledgedSafetyCheck]]"=Field(default_factory=list)
    
    """
    The safety checks reported by the API that have been acknowledged by the
    developer.
    """

    status: "Optional[Literal['in_progress', 'completed', 'incomplete']]"= None
    
    """The status of the message input.

    One of `in_progress`, `completed`, or `incomplete`. Populated when input items
    are returned via API.
    """


class FunctionCallOutput(BaseModel):
    call_id: "str"
    
    """The unique ID of the function tool call generated by the model."""

    output: "str"
    
    """A JSON string of the output of the function tool call."""

    type: "Literal['function_call_output']"
    
    """The type of the function tool call output. Always `function_call_output`."""

    id: "Optional[str]"= None
    
    """The unique ID of the function tool call output.

    Populated when this item is returned via API.
    """

    status: "Optional[Literal['in_progress', 'completed', 'incomplete']]"= None
    
    """The status of the item.

    One of `in_progress`, `completed`, or `incomplete`. Populated when items are
    returned via API.
    """


class ItemReference(BaseModel):
    id: "str"
    
    """The ID of the item to reference."""

    type: "Optional[Literal['item_reference']]"= None
    
    """The type of item to reference. Always `item_reference`."""


ResponseInputItemParam = Union[
    EasyInputMessageParam,
    Message,
    ResponseOutputMessageParam,
    ResponseFileSearchToolCallParam,
    ResponseComputerToolCallParam,
    ComputerCallOutput,
    ResponseFunctionWebSearchParam,
    ResponseFunctionToolCallParam,
    FunctionCallOutput,
    ResponseReasoningItemParam,
    ItemReference,
]
Message.model_rebuild()
ComputerCallOutputAcknowledgedSafetyCheck.model_rebuild()
ComputerCallOutput.model_rebuild()
FunctionCallOutput.model_rebuild()
ItemReference.model_rebuild()

