# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from pydantic import BaseModel, Field
from typing import List, Optional

from typing import Optional,Union
from typing_extensions import Literal

from .chat_completion_content_part_text_param import ChatCompletionContentPartTextParam
from .chat_completion_message_tool_call_param import ChatCompletionMessageToolCallParam
from .chat_completion_content_part_refusal_param import ChatCompletionContentPartRefusalParam

__all__ = ["ChatCompletionAssistantMessageParam", "Audio", "ContentArrayOfContentPart", "FunctionCall"]


class Audio(BaseModel):
    id: "str"= None
    
    """Unique identifier for a previous audio response from the model."""


ContentArrayOfContentPart = Union[ChatCompletionContentPartTextParam, ChatCompletionContentPartRefusalParam]


class FunctionCall(BaseModel):
    arguments: "str"= None
    
    """
    The arguments to call the function with, as generated by the model in JSON
    format. Note that the model does not always generate valid JSON, and may
    hallucinate parameters not defined by your function schema. Validate the
    arguments in your code before calling your function.
    """

    name: "str"= None
    
    """The name of the function to call."""


class ChatCompletionAssistantMessageParam(BaseModel):
    role: "Literal['assistant']"= None
    
    """The role of the messages author, in this case `assistant`."""

    audio: "Optional[Audio]"= None
    
    """Data about a previous audio response from the model.

    [Learn more](https://platform.openai.com/docs/guides/audio).
    """

    content: "Optional[Union[str, List[ContentArrayOfContentPart], None]]"= None
    
    """The contents of the assistant message.

    Required unless `tool_calls` or `function_call` is specified.
    """

    function_call: "Optional[FunctionCall]"= None
    
    """Deprecated and replaced by `tool_calls`.

    The name and arguments of a function that should be called, as generated by the
    model.
    """

    name: "Optional[str]"= None
    
    """An optional name for the participant.

    Provides the model information to differentiate between participants of the same
    role.
    """

    refusal: "Optional[str]"= None
    
    """The refusal message by the assistant."""

    tool_calls: "Optional[List[ChatCompletionMessageToolCallParam]]"= None
    
    """The tool calls generated by the model, such as function calls."""
Audio.model_rebuild()
FunctionCall.model_rebuild()
ChatCompletionAssistantMessageParam.model_rebuild()

